variables:
    CONAN_PROFILE: "gcc7"                                                                               # profile to use with conan
    CC: "gcc-7"                                                                                         # eg. gcc or clang
    CXX: "g++-7"                                                                                        # eg. g++ or clang++
    # CONAN_PUBLIC_REMOTE_NAME: "lrde-public"                                                           # Conan remote name
    # CONAN_PUBLIC_REMOTE_URL: "https://artifactory.lrde.epita.fr/artifactory/api/conan/lrde-public"    # Conan remote name
    # CONAN_PRIVATE_REMOTE_NAME: "lrde-private"                                                         # Conan remote name
    # CONAN_PRIVATE_REMOTE_URL: "http://artifactory.lrde.epita.fr/artifactory/api/conan/lrde-private"   # Conan remote name
    # CONAN_USER: "mroynard"                                                                            # Conan user name
    # CONAN_API_KEY: "AKCp5bAiaob11EFd9cnDkF1LJBqG5QDgTgbQttVmSfgokeLK4yE6AQ9KM7WyUqBCK1MwTp9H1"        # Conan API key on public bintray repositories
    CONAN_PRIVATE_REMOTE_NAME: "dutiona-lrde"                                                           # Conan remote name
    CONAN_PRIVATE_REMOTE_URL: "https://api.bintray.com/conan/dutiona/lrde"                              # Conan remote name
    CONAN_USER: "dutiona"                                                                               # Conan user name
    CONAN_API_KEY: "e2a665548385e82bf1ecbb4739d3582b83b8235f"                                           # Conan API key on public bintray repositories
    NAME: "blackmagic"                                                                                  # Conan package name
    TAG: "stable"                                                                                       # Conan tag
    VERSION: "0.4"                                                                                      # Version to build
    TARGET: "check"                                                                                     # target to invoke
    RELEASE_TYPE: "Release"                                                                             # default release type
    NAME: "blackmagic"                                                                                  # Conan package name
    TAG: "stable"                                                                                       # Conan tag
    VERSION: "0.4"                                                                                      # Version to build
    TESTS: "ON"                                                                                         # build unit tests
    EXAMPLES: "ON"                                                                                      # build examples
    BENCHMARKS: "OFF"                                                                                   # build benchmarks

stages:
    - build
    - bench
    - package
    - doc

.job-basic-build-linux: &distcheck-basic-build-linux
    stage: build
    image: mroynard/ubuntu-toolset:stable
    script:
        - set -e
        - export CC=$CC
        - export CXX=$CXX
        - $CXX --version
        - conan remote add $CONAN_PRIVATE_REMOTE_NAME $CONAN_PRIVATE_REMOTE_URL
        - conan user
                -p $CONAN_API_KEY
                -r $CONAN_PRIVATE_REMOTE_NAME $CONAN_USER
        - conan remote list
        - mkdir -p build && cd build
        - conan install ..
                --build missing
                -pr $CONAN_PROFILE
        - cmake -DWITH_TESTS=$TESTS
                -DWITH_EXAMPLES=$EXAMPLES
                ..
        - cmake --build .
                --config $RELEASE_TYPE
                --target $TARGET
        - ctest -C $RELEASE_TYPE
                --output-on-failure
                --schedule-random
                --verbose

distcheck-build-linux-gcc7-release:
    <<: *distcheck-basic-build-linux
    variables:

distcheck-build-linux-gcc7-debug:
    <<: *distcheck-basic-build-linux
    variables:
        RELEASE_TYPE: "Debug"

distcheck-build-linux-gcc8-release:
    <<: *distcheck-basic-build-linux
    variables:
        CC: "gcc-8"
        CXX: "g++-8"
        CONAN_PROFILE: "gcc8"

distcheck-build-linux-gcc8-debug:
    <<: *distcheck-basic-build-linux
    variables:
        CC: "gcc-8"
        CXX: "g++-8"
        CONAN_PROFILE: "gcc8"
        RELEASE_TYPE: "Debug"

distcheck-build-linux-clang6-release:
    <<: *distcheck-basic-build-linux
    variables:
        CC: "clang-6.0"
        CXX: "clang++-6.0"
        CONAN_PROFILE: "clang6"

distcheck-build-linux-clang6-debug:
    <<: *distcheck-basic-build-linux
    variables:
        CC: "clang-6.0"
        CXX: "clang++-6.0"
        CONAN_PROFILE: "clang6"
        RELEASE_TYPE: "Debug"

# distcheck-build-linux-clang7-release:
#     <<: *distcheck-basic-build-linux
#     variables:
#         CC: "clang-7"
#         CXX: "clang++-7"
#         CONAN_PROFILE: "clang7"

# distcheck-build-linux-clang7-release:
#     <<: *distcheck-basic-build-linux
#     variables:
#         CC: "clang-7"
#         CXX: "clang++-7"
#         CONAN_PROFILE: "clang7"
#         RELEASE_TYPE: "Debug"

.job-basic-bench-linux: &distcheck-basic-bench-linux
    stage: bench
    image: mroynard/ubuntu-toolset:stable
    variables:
        TESTS: "OFF"
        EXAMPLES: "OFF"
        BENCHMARKS: "ON"
    script:
        - set -e
        - export CC=$CC
        - export CXX=$CXX
        - $CXX --version
        - conan remote add $CONAN_PRIVATE_REMOTE_NAME $CONAN_PRIVATE_REMOTE_URL
        - conan user
                -p $CONAN_API_KEY
                -r $CONAN_PRIVATE_REMOTE_NAME $CONAN_USER
        - conan remote list
        - mkdir -p build && cd build
        - conan install ..
                --build missing
                -pr $CONAN_PROFILE
        - cmake -DWITH_TESTS=$TESTS
                -DWITH_EXAMPLES=$EXAMPLES
                -DWITH_BENCHMARKS=$BENCHMARKS
                ..
        - cmake --build .
                --config $RELEASE_TYPE
                --target benchmarks-compile
        - cmake --build .
                --config $RELEASE_TYPE
                --target benchmarks

distcheck-bench-linux-gcc7-release:
    <<: *distcheck-basic-bench-linux
    variables:

distcheck-bench-linux-gcc8-release:
    <<: *distcheck-basic-bench-linux
    variables:
        CC: "gcc-8"
        CXX: "g++-8"
        CONAN_PROFILE: "gcc8"

distcheck-bench-linux-clang6-release:
    <<: *distcheck-basic-bench-linux
    variables:
        CC: "clang-6.0"
        CXX: "clang++-6.0"
        CONAN_PROFILE: "clang6"

# distcheck-bench-linux-clang7-release:
#     <<: *distcheck-basic-bench-linux
#     variables:
#         CC: "clang-7"
#         CXX: "clang++-7"
#         CONAN_PROFILE: "clang7"


distcheck-package-linux-dev:
    stage: package
    image: mroynard/ubuntu-toolset:stable
    script:
        - set -e
        - conan remote add $CONAN_PRIVATE_REMOTE_NAME $CONAN_PRIVATE_REMOTE_URL
        - conan user
               -p $CONAN_API_KEY
               -r $CONAN_PRIVATE_REMOTE_NAME $CONAN_USER
        - conan remote list
        - conan create
                --build missing
                . $NAME/$VERSION@$CONAN_USER/$TAG
    only:
        - dev

distcheck-package-linux-master:
    stage: package
    image: mroynard/ubuntu-toolset:stable
    script:
        - set -e
        - conan remote add $CONAN_PRIVATE_REMOTE_NAME $CONAN_PRIVATE_REMOTE_URL
        - conan user
               -p $CONAN_API_KEY
               -r $CONAN_PRIVATE_REMOTE_NAME $CONAN_USER
        - conan remote list
        - conan create
                --build missing
                . $NAME/$VERSION@$CONAN_USER/$TAG
        - conan upload
                --all
                -r $CONAN_PRIVATE_REMOTE_NAME
                $NAME/$VERSION@$CONAN_USER/$TAG
    only:
        - master


documentation-builder:
    stage: doc
    image: mroynard/ubuntu-doctoolset:stable
    variables:
        TARGET: "docs"
        TESTS: "OFF"
        EXAMPLES: "OFF"
        BENCHMARKS: "OFF"
        COVERAGE: "OFF"
    script:
        - mkdir -p build && cd build
        - cmake -DWITH_TESTS=$TESTS
                -DWITH_EXAMPLES=$EXAMPLES
                -DWITH_BENCHMARKS=$BENCHMARKS
                -DWITH_CODE_COVERAGE=$COVERAGE
                ..
        - cmake --build .
                --target $TARGET
# Artifact is too large !
#    artifacts:
#        name: "documentation"
#        paths:
#            - build/doc/api
#            - build/doc/user
#        expire_in: 14 days
