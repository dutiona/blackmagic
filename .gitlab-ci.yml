variables:
    CC: "gcc"                                                       # eg. gcc or clang
    CXX: "g++"                                                      # eg. g++ or clang++
    CONAN_PROFILE: "gcc-release"                                    # profile to use with conan
    CONAN_REMOTE_NAME: "dutiona-lrde"                               # Conan remote name
    CONAN_REMOTE_URL: "https://api.bintray.com/conan/dutiona/lrde"  # Conan remote name
    CONAN_USER: "dutiona"                                           # Conan user name
    CONAN_API_KEY: "e2a665548385e82bf1ecbb4739d3582b83b8235f"       # Conan API key on public bintray repositories
    NAME: "blackmagic"                                              # Conan package name
    TAG: "stable"                                                   # Conan tag
    VERSION: "0.4"                                                  # Version to build
    CMAKE_GENERATOR: "-G Ninja"                                     # include -G if defined
    BUILD_DIRECTORY: "build-in-docker"                              # build directory name
    SOURCE_DIRECTORY: ".."                                          # where cmake search source files from the build directory
    TESTS: "ON"                                                     # build and run unit tests
    EXAMPLES: "ON"                                                  # build and run examples
    BENCHMARKS: "ON"                                                # build and run benchmarks
    COVERAGE: "OFF"                                                 # build and run with coverage flags

stages:
    - build
    - package
    - doc

.job-basic-build-linux: &distcheck-build-basic-linux
    stage: build
    image: mroynard/ubuntu-toolset:stable
    script:
      - set -e
      - export CC=$CC
      - export CXX=$CXX
      - $CXX --version
      - mkdir -p $BUILD_DIRECTORY
      - cd $BUILD_DIRECTORY
      - conan remote add $CONAN_REMOTE_NAME $CONAN_REMOTE_URL
      - conan user -p $CONAN_API_KEY -r $CONAN_REMOTE_NAME $CONAN_USER
      - conan remote list
      - conan install ..
              --build missing
              -pr $CONAN_PROFILE
      - cmake $CMAKE_GENERATOR
              -DWITH_TESTS=$TESTS
              -DWITH_EXAMPLES=$EXAMPLES
              -DWITH_BENCHMARKS=$BENCHMARKS
              -DWITH_CODE_COVERAGE=$COVERAGE
              $SOURCE_DIRECTORY
      - cmake --build .
              --config $RELEASE_TYPE
      - ctest -C $RELEASE_TYPE
              --output-on-failure
              --schedule-random
              --verbose
      - cmake --build .
              --target benchmarks
              --config $RELEASE_TYPE

distcheck-build-linux-gcc-release:
    <<: *distcheck-build-basic-linux
    variables:

distcheck-build-linux-clang-release:
    <<: *distcheck-build-basic-linux
    variables:
        CC: "clang"
        CXX: "clang++"
        CONAN_PROFILE: "clang-release"

distcheck-build-linux-gcc-debug:
    <<: *distcheck-build-basic-linux
    variables:
        RELEASE_TYPE: "Debug"
        CONAN_PROFILE: "gcc-debug"

distcheck-build-linux-clang-debug:
    <<: *distcheck-build-basic-linux
    variables:
        RELEASE_TYPE: "Debug"
        CC: "clang"
        CXX: "clang++"
        CONAN_PROFILE: "clang-debug"

.job-basic-package-linux: &distcheck-package-basic-linux
    stage: package
    image: mroynard/ubuntu-toolset:stable
    script:
      - set -e
      - export CC=$CC
      - export CXX=$CXX
      - $CXX --version
      - conan remote add $CONAN_REMOTE_NAME $CONAN_REMOTE_URL
      - conan user -p $CONAN_API_KEY -r $CONAN_REMOTE_NAME $CONAN_USER
      - conan remote list
      - conan create
              --build missing
              -pr $CONAN_PROFILE
              . $NAME/$VERSION@$CONAN_USER/$TAG-$CONAN_PROFILE
      - conan upload
              -r $CONAN_REMOTE_NAME
              $NAME/$VERSION@$CONAN_USER/$TAG-$CONAN_PROFILE

distcheck-package-linux-gcc-release:
    <<: *distcheck-package-basic-linux
    variables:

distcheck-package-linux-clang-release:
    <<: *distcheck-package-basic-linux
    variables:
        CC: "clang"
        CXX: "clang++"
        CONAN_PROFILE: "clang-release"

distcheck-package-linux-gcc-debug:
    <<: *distcheck-package-basic-linux
    variables:
        RELEASE_TYPE: "Debug"
        CONAN_PROFILE: "gcc-debug"

distcheck-package-linux-clang-debug:
    <<: *distcheck-package-basic-linux
    variables:
        RELEASE_TYPE: "Debug"
        CC: "clang"
        CXX: "clang++"
        CONAN_PROFILE: "clang-debug"

documentation-builder:
    stage: doc
    image: mroynard/ubuntu-doctoolset:stable
    variables:
        BUILD_DIRECTORY: "build-in-docker-doc"
        TARGET: "docs"
        TESTS: "OFF"
        EXAMPLES: "OFF"
        BENCHMARKS: "OFF"
        COVERAGE: "OFF"
    script:
      - mkdir -p $BUILD_DIRECTORY
      - cd $BUILD_DIRECTORY
      - conan remote add $CONAN_REMOTE_NAME $CONAN_REMOTE_URL
      - conan user -p $CONAN_API_KEY -r $CONAN_REMOTE_NAME $CONAN_USER
      - conan remote list
      - conan install .. --build missing
      - cmake $CMAKE_GENERATOR
              -DWITH_TESTS=$TESTS
              -DWITH_EXAMPLES=$EXAMPLES
              -DWITH_BENCHMARKS=$BENCHMARKS
              -DWITH_CODE_COVERAGE=$COVERAGE
              $SOURCE_DIRECTORY
      - cmake --build . --target $TARGET
# Artifact is too large !
#    artifacts:
#        name: "documentation"
#        paths:
#            - $BUILD_DIRECTORY/doc/api
#            - $BUILD_DIRECTORY/doc/user
#        expire_in: 14 days
